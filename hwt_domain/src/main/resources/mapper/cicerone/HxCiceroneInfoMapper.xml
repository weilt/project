<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hwt.domain.mapper.cicerone.HxCiceroneInfoMapper">
  <resultMap id="BaseResultMap" type="com.hwt.domain.entity.cicerone.HxCiceroneInfo">
    <id column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="real_name" jdbcType="VARCHAR" property="real_name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="birthday" jdbcType="BIGINT" property="birthday" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="identity_no" jdbcType="VARCHAR" property="identity_no" />
    <result column="identity_positive" jdbcType="VARCHAR" property="identity_positive" />
    <result column="identity_negative" jdbcType="VARCHAR" property="identity_negative" />
    <result column="identity_hold" jdbcType="VARCHAR" property="identity_hold" />
    <result column="service_area_city" jdbcType="VARCHAR" property="service_area_city" />
    <result column="service_area_city_name" jdbcType="VARCHAR" property="service_area_city_name" />
    <result column="work_status" jdbcType="TINYINT" property="work_status" />
    <result column="autograph" jdbcType="VARCHAR" property="autograph" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="service_count" jdbcType="BIGINT" property="service_count" />
    <result column="score_num" jdbcType="INTEGER" property="score_num" />
    <result column="score" jdbcType="DECIMAL" property="score" />
    <result column="collect" jdbcType="BIGINT" property="collect" />
    <result column="confirm" jdbcType="DECIMAL" property="confirm" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="everyday_price" jdbcType="DECIMAL" property="everyday_price" />
    <result column="create_time" jdbcType="BIGINT" property="create_time" />
    <result column="examine_time" jdbcType="BIGINT" property="examine_time" />
    <result column="is_reserved_num" jdbcType="INTEGER" property="is_reserved_num" />
    <result column="refuse_num" jdbcType="INTEGER" property="refuse_num" />
    <result column="is_canceled_num" jdbcType="INTEGER" property="is_canceled_num" />
    <result column="cicerone_type" jdbcType="VARCHAR" property="cicerone_type" />
    <result column="is_open" jdbcType="INTEGER" property="is_open" />
    <result column="is_hide" jdbcType="INTEGER" property="is_hide" />
  </resultMap>

   <sql id="Base_Column_List">
    user_id, real_name, sex, birthday, cover, identity_no, identity_positive, identity_negative, 
    identity_hold, service_area_city, service_area_city_name, work_status, autograph, 
    phone, tag, service_count, score_num, score, collect, confirm, status, reason, everyday_price, 
    create_time, examine_time, is_reserved_num, refuse_num, is_canceled_num, cicerone_type, 
    is_open, is_hide
  </sql>

  <select id="queryByList" parameterType="com.hwt.domain.entity.cicerone.vo.HxCiceroneInfoVo" resultType="java.util.Map">

      select  DISTINCT  IFNULL(a.birthday,'')  birthday ,IFNULL(a.autograph,'')  autograph,IFNULL(a.cover,'') cover  ,IFNULL(a.real_name,'') real_name ,a.user_id, a.score, a.score_num ,a.service_count ,a.status ,IFNULL(b.user_icon,'') user_icon
      from hx_cicerone_info a ,hx_user_info b , hx_cicerone_relevance c
      where a.user_id = b.user_id and a.user_id = c.cic_id and a.status = 2  and a.is_open = 0  and a.is_hide = 0
      <if test="cityCode != null and cityCode != 0">
          and a.service_area_city = #{cityCode}
      </if>
      <if test="sex != null and sex != 0">
          and a.sex = #{sex}
      </if>
      <if test="startYear > 0 and endYear > startYear ">
          and a.birthday &gt;#{startYear} and a.birthday &lt; #{endYear}
      </if>

    <if test="tag != null and tag != ''">
      and a.tag = #{tag}
    </if>
      <if test="ciceroneType != null and ciceroneType > 0">
          and c.type_id = #{ciceroneType}
      </if>
      <if test="orderBy != null and orderBy != ''">
          order by  a.${orderBy} desc
      </if>
      limit #{pageIndex} ,#{pageSize}

    <!--select  DISTINCT  IFNULL(a.birthday,'') as birthday ,IFNULL(a.autograph,'') as autograph,IFNULL(a.cover,'') cover ,IFNULL(a.id,'') id ,IFNULL(a.real_name,'') real_name ,IFNULL(a.real_name,'') a.score ,a.service_count ,a.status ,b.user_icon-->
    <!--from hx_cicerone_info a-->
    <!--LEFT JOIN hx_user_info b ON a.user_id = b.user_id-->
    <!--LEFT JOIN hx_cicerone_relevance c ON a.id = c.cic_id-->
    <!--where a.status = 2-->
    <!--<if test="cityCode != null and cityCode != 0">-->
       <!--and a.service_area_city = #{cityCode}-->
    <!--</if>-->
    <!--<if test="sex != null and sex != 0">-->
      <!--and a.sex = #{sex}-->
    <!--</if>-->
    <!--<if test="startYear > 0 and endYear > startYear ">-->
      <!--and a.birthday &gt;#{startYear} and a.birthday &lt; #{endYear}-->
    <!--</if>-->
    <!--<if test="ciceroneType != null and ciceroneType > 0">-->
      <!--and c.type_id = #{ciceroneType}-->
    <!--</if>-->
    <!--<if test="orderBy != null and orderBy != ''">-->
      <!--order by  a.${orderBy} desc-->
    <!--</if>-->
    <!--limit #{pageIndex} ,#{pageSize}-->
  </select>


  <select id="findByUserId" resultType="com.hwt.domain.entity.cicerone.HxCiceroneInfo" parameterType="java.lang.Long">
    SELECT <include refid="Base_Column_List" /> FROM hx_cicerone_info WHERE  user_id = #{userId}
  </select>

<!--   <select id="countByUserId" parameterType="java.lang.Long" >
    SELECT count(id) FROM hx_cicerone_info WHERE  user_id = #{userId}
  </select> -->
  
   <insert id="insert" parameterType="com.hwt.domain.entity.cicerone.HxCiceroneInfo">
    insert into hx_cicerone_info (user_id, real_name, sex, 
      birthday, cover, identity_no, 
      identity_positive, identity_negative, identity_hold, 
      service_area_city, service_area_city_name, 
      work_status, autograph, phone, 
      tag, service_count, score_num, 
      score, collect, confirm, 
      status, reason, everyday_price, 
      create_time, examine_time, is_reserved_num, 
      refuse_num, is_canceled_num, cicerone_type, 
      is_open, is_hide)
    values (#{user_id,jdbcType=BIGINT}, #{real_name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{birthday,jdbcType=BIGINT}, #{cover,jdbcType=VARCHAR}, #{identity_no,jdbcType=VARCHAR}, 
      #{identity_positive,jdbcType=VARCHAR}, #{identity_negative,jdbcType=VARCHAR}, #{identity_hold,jdbcType=VARCHAR}, 
      #{service_area_city,jdbcType=VARCHAR}, #{service_area_city_name,jdbcType=VARCHAR}, 
      #{work_status,jdbcType=TINYINT}, #{autograph,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{tag,jdbcType=VARCHAR}, #{service_count,jdbcType=BIGINT}, #{score_num,jdbcType=INTEGER}, 
      #{score,jdbcType=DECIMAL}, #{collect,jdbcType=BIGINT}, #{confirm,jdbcType=DECIMAL}, 
      #{status,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, #{everyday_price,jdbcType=DECIMAL}, 
      #{create_time,jdbcType=BIGINT}, #{examine_time,jdbcType=BIGINT}, #{is_reserved_num,jdbcType=INTEGER}, 
      #{refuse_num,jdbcType=INTEGER}, #{is_canceled_num,jdbcType=INTEGER}, #{cicerone_type,jdbcType=VARCHAR}, 
      #{is_open,jdbcType=INTEGER}, #{is_hide,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hwt.domain.entity.cicerone.HxCiceroneInfo">
    insert into hx_cicerone_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="real_name != null">
        real_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="identity_no != null">
        identity_no,
      </if>
      <if test="identity_positive != null">
        identity_positive,
      </if>
      <if test="identity_negative != null">
        identity_negative,
      </if>
      <if test="identity_hold != null">
        identity_hold,
      </if>
      <if test="service_area_city != null">
        service_area_city,
      </if>
      <if test="service_area_city_name != null">
        service_area_city_name,
      </if>
      <if test="work_status != null">
        work_status,
      </if>
      <if test="autograph != null">
        autograph,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="service_count != null">
        service_count,
      </if>
      <if test="score_num != null">
        score_num,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="collect != null">
        collect,
      </if>
      <if test="confirm != null">
        confirm,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="everyday_price != null">
        everyday_price,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="examine_time != null">
        examine_time,
      </if>
      <if test="is_reserved_num != null">
        is_reserved_num,
      </if>
      <if test="refuse_num != null">
        refuse_num,
      </if>
      <if test="is_canceled_num != null">
        is_canceled_num,
      </if>
      <if test="cicerone_type != null">
        cicerone_type,
      </if>
      <if test="is_open != null">
        is_open,
      </if>
      <if test="is_hide != null">
        is_hide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="real_name != null">
        #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=BIGINT},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="identity_no != null">
        #{identity_no,jdbcType=VARCHAR},
      </if>
      <if test="identity_positive != null">
        #{identity_positive,jdbcType=VARCHAR},
      </if>
      <if test="identity_negative != null">
        #{identity_negative,jdbcType=VARCHAR},
      </if>
      <if test="identity_hold != null">
        #{identity_hold,jdbcType=VARCHAR},
      </if>
      <if test="service_area_city != null">
        #{service_area_city,jdbcType=VARCHAR},
      </if>
      <if test="service_area_city_name != null">
        #{service_area_city_name,jdbcType=VARCHAR},
      </if>
      <if test="work_status != null">
        #{work_status,jdbcType=TINYINT},
      </if>
      <if test="autograph != null">
        #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="service_count != null">
        #{service_count,jdbcType=BIGINT},
      </if>
      <if test="score_num != null">
        #{score_num,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DECIMAL},
      </if>
      <if test="collect != null">
        #{collect,jdbcType=BIGINT},
      </if>
      <if test="confirm != null">
        #{confirm,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="everyday_price != null">
        #{everyday_price,jdbcType=DECIMAL},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=BIGINT},
      </if>
      <if test="examine_time != null">
        #{examine_time,jdbcType=BIGINT},
      </if>
      <if test="is_reserved_num != null">
        #{is_reserved_num,jdbcType=INTEGER},
      </if>
      <if test="refuse_num != null">
        #{refuse_num,jdbcType=INTEGER},
      </if>
      <if test="is_canceled_num != null">
        #{is_canceled_num,jdbcType=INTEGER},
      </if>
      <if test="cicerone_type != null">
        #{cicerone_type,jdbcType=VARCHAR},
      </if>
      <if test="is_open != null">
        #{is_open,jdbcType=INTEGER},
      </if>
      <if test="is_hide != null">
        #{is_hide,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <!-- 更新  空值不更新 -->
 <update id="updateByPrimaryKeySelective" parameterType="com.hwt.domain.entity.cicerone.HxCiceroneInfo">
    update hx_cicerone_info
    <set>
      <if test="real_name != null">
        real_name = #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=BIGINT},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="identity_no != null">
        identity_no = #{identity_no,jdbcType=VARCHAR},
      </if>
      <if test="identity_positive != null">
        identity_positive = #{identity_positive,jdbcType=VARCHAR},
      </if>
      <if test="identity_negative != null">
        identity_negative = #{identity_negative,jdbcType=VARCHAR},
      </if>
      <if test="identity_hold != null">
        identity_hold = #{identity_hold,jdbcType=VARCHAR},
      </if>
      <if test="service_area_city != null">
        service_area_city = #{service_area_city,jdbcType=VARCHAR},
      </if>
      <if test="service_area_city_name != null">
        service_area_city_name = #{service_area_city_name,jdbcType=VARCHAR},
      </if>
      <if test="work_status != null">
        work_status = #{work_status,jdbcType=TINYINT},
      </if>
      <if test="autograph != null">
        autograph = #{autograph,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
      <if test="service_count != null">
        service_count = #{service_count,jdbcType=BIGINT},
      </if>
      <if test="score_num != null">
        score_num = #{score_num,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DECIMAL},
      </if>
      <if test="collect != null">
        collect = #{collect,jdbcType=BIGINT},
      </if>
      <if test="confirm != null">
        confirm = #{confirm,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="everyday_price != null">
        everyday_price = #{everyday_price,jdbcType=DECIMAL},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=BIGINT},
      </if>
      <if test="examine_time != null">
        examine_time = #{examine_time,jdbcType=BIGINT},
      </if>
      <if test="is_reserved_num != null">
        is_reserved_num = #{is_reserved_num,jdbcType=INTEGER},
      </if>
      <if test="refuse_num != null">
        refuse_num = #{refuse_num,jdbcType=INTEGER},
      </if>
      <if test="is_canceled_num != null">
        is_canceled_num = #{is_canceled_num,jdbcType=INTEGER},
      </if>
      <if test="cicerone_type != null">
        cicerone_type = #{cicerone_type,jdbcType=VARCHAR},
      </if>
      <if test="is_open != null">
        is_open = #{is_open,jdbcType=INTEGER},
      </if>
      <if test="is_hide != null">
        is_hide = #{is_hide,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hwt.domain.entity.cicerone.HxCiceroneInfo">
    update hx_cicerone_info
    set real_name = #{real_name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=BIGINT},
      cover = #{cover,jdbcType=VARCHAR},
      identity_no = #{identity_no,jdbcType=VARCHAR},
      identity_positive = #{identity_positive,jdbcType=VARCHAR},
      identity_negative = #{identity_negative,jdbcType=VARCHAR},
      identity_hold = #{identity_hold,jdbcType=VARCHAR},
      service_area_city = #{service_area_city,jdbcType=VARCHAR},
      service_area_city_name = #{service_area_city_name,jdbcType=VARCHAR},
      work_status = #{work_status,jdbcType=TINYINT},
      autograph = #{autograph,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR},
      service_count = #{service_count,jdbcType=BIGINT},
      score_num = #{score_num,jdbcType=INTEGER},
      score = #{score,jdbcType=DECIMAL},
      collect = #{collect,jdbcType=BIGINT},
      confirm = #{confirm,jdbcType=DECIMAL},
      status = #{status,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      everyday_price = #{everyday_price,jdbcType=DECIMAL},
      create_time = #{create_time,jdbcType=BIGINT},
      examine_time = #{examine_time,jdbcType=BIGINT},
      is_reserved_num = #{is_reserved_num,jdbcType=INTEGER},
      refuse_num = #{refuse_num,jdbcType=INTEGER},
      is_canceled_num = #{is_canceled_num,jdbcType=INTEGER},
      cicerone_type = #{cicerone_type,jdbcType=VARCHAR},
      is_open = #{is_open,jdbcType=INTEGER},
      is_hide = #{is_hide,jdbcType=INTEGER}
    where user_id = #{user_id,jdbcType=BIGINT}
  </update>
  <!-- 根据条件获取总条数审核通过了的 -->
  <select id="queryCountByMapToAdmin"  resultType="java.lang.Long" parameterType="map">
  	select count(a.user_id) from hx_cicerone_info a, hx_user b where 1=1 and b.user_id = a.user_id
		<if test="real_name != null and real_name !=''">
			and  a.`real_name` like '%${real_name}%'
		</if>
		<if test="service_area_city_name != null and service_area_city_name !=''">
			and  a.`service_area_city_name` like '%${service_area_city_name}%'
		</if>
		<if test="status != null and status >0">
			and  a.status = #{status}
		</if>
		<if test="feild != null and feild !=''">
			and ( b.account_phone like '%${feild}%' or b.account like '%${feild}%')
		</if> 
		<!-- <if test="account_phone != null and account_phone !=''">
			and  a.user_id in (select b.user_id from hx_user b where b.account_phone = #{account_phone})
		</if>
		<if test="account != null and account !=''">
			and  a.user_id in (select b.user_id from hx_user b where b.account like '%${account}%')
		</if> -->
		<!-- <if test="feild != null and feild !=''">
			and  a.user_id in (select b.user_id from hx_user b where b.account_phone like '%${feild}%' or b.account like '%${feild}%')
		</if> -->
  </select>
  
  <!-- 根据条件获取数据 -->
<select id="queryByMapToAdmin" resultType="java.util.Map" parameterType="map">
	select a.* ,b.account 
		
		from hx_cicerone_info a, hx_user b where 1=1 and a.user_id = b.user_id
		<if test="account != null and account !=''">
			and  `account` like '%${account}%'
		</if>
		<if test="service_area_city_name != null and service_area_city_name !=''">
			and  `service_area_city_name` like '%${service_area_city_name}%'
		</if>
		<if test="status != null and status !=''">
			and  status = #{status}
		</if>
		<!-- <if test="account_phone != null and account_phone !=''">
			and  a.user_id in (select b.user_id from hx_user b where b.account_phone = #{account_phone})
		</if>
		<if test="account != null and account !=''">
			and  a.user_id in (select b.user_id from hx_user b where b.account like '%${account}%')
		</if> -->
		<!-- <if test="feild != null and feild !=''">
			and  a.user_id in (select b.user_id from hx_user b where b.account_phone like '%${feild}%' or b.account like '%${feild}%')
		</if> -->
		<if test="feild != null and feild !=''">
			and ( b.account_phone like '%${feild}%' or b.account like '%${feild}%')
		</if> 
		<if test="orderBy!=null and orderBy!=''">
			order by  <!-- <![CDATA[ #{orderBy} ]]> -->${orderBy}
		</if> 
		
		 limit #{startNum} ,#{pageSize}
</select>
</mapper>