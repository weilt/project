<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hwt.domain.mapper.user.video.HxUserVideoLikeMapper">
  <resultMap id="BaseResultMap" type="com.hwt.domain.entity.user.video.HxUserVideoLike">
    <id column="user_id" jdbcType="BIGINT" property="user_id" />
    <id column="video_id" jdbcType="BIGINT" property="video_id" />
    <result column="create_time" jdbcType="BIGINT" property="create_time" />
  </resultMap>
  
  
  <sql id="Base_Column_List">
    user_id, video_id, create_time
  </sql>
  
  <insert id="insert" parameterType="com.hwt.domain.entity.user.video.HxUserVideoLike">
    insert into
    hx_user_video_like
    (user_id, video_id, create_time)
    values
    (#{user_id,jdbcType=BIGINT},
     #{video_id,jdbcType=BIGINT},
     #{create_time,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.hwt.domain.entity.user.video.HxUserVideoLike">
    insert into hx_user_video_like
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="video_id != null">
        video_id,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="video_id != null">
        #{video_id,jdbcType=BIGINT},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hwt.domain.entity.user.video.HxUserVideoLike">
    update hx_user_video_like
    <set>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=BIGINT},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=BIGINT}
      and video_id = #{video_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hwt.domain.entity.user.video.HxUserVideoLike">
    update hx_user_video_like
    set create_time = #{create_time,jdbcType=BIGINT}
    where user_id = #{user_id,jdbcType=BIGINT}
      and video_id = #{video_id,jdbcType=BIGINT}
  </update>
  
  <!-- 查询喜欢列表 -->
  <select id="like_query" resultType="com.hwt.domain.entity.user.video.vo.HxUserVideoLikeListVo">
  		select   a.video_id, a.user_id, a.attribute_id, a.`dec`, a.content,a.image, a.is_hide, a.name_id, a.name_type,
    			a.create_time, a.good_num, a.look_num, a.comment_num, a.longitude, a.latitude, a.city, a.area_code,a.location ,a.music_id,
    			b.user_icon as user_icon, b.account as user_account , b.nickname as nickname,b.im_id,
    			d.follow_user_id as video_follow_user_id, c.create_time as like_time
    			 
    			from hx_user_info b join hx_user_video a join hx_user_video_like c
    			
    			left join hx_user_video_follow d on d.user_id = #{user_id} and d.follow_user_id = a.user_id 
    	where 1 = 1
    	
    		<if test="last_like_time !=null and last_like_time &gt; 0">
  				and c.create_time &lt; #{last_like_time}
  			</if>
  			
  			and   b.user_id = a.user_id  and a.video_id =  c.video_id and c.user_id = #{user_id}
  			
  			
  			order by c.create_time desc 
  			
  			limit 0,#{pageSize}
  </select>
</mapper>