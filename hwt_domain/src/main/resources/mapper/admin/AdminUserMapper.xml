<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hwt.domain.mapper.admin.AdminUserMapper">
   <resultMap id="BaseResultMap" type="com.hwt.domain.entity.admin.AdminUser">
    <id column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="user_account" jdbcType="VARCHAR" property="user_account" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_image" jdbcType="VARCHAR" property="user_image" />
    <result column="job_position" jdbcType="VARCHAR" property="job_position" />
    <result column="role_id" jdbcType="INTEGER" property="role_id" />
    <result column="real_name" jdbcType="VARCHAR" property="real_name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="about_me" jdbcType="VARCHAR" property="about_me" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="opt_user_id" jdbcType="BIGINT" property="opt_user_id" />
    <result column="isenable" jdbcType="INTEGER" property="isenable" />
  </resultMap>
  
  <sql id="Base_Column_List">
    user_id, user_account, password, user_image, job_position, role_id, real_name, sex, 
    address, about_me, telephone, create_time, opt_user_id, isenable
  </sql>
  
   <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin_user
    where user_id = #{user_id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin_user
    where user_id = #{user_id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.hwt.domain.entity.admin.AdminUser">
    insert into admin_user (user_id, user_account, password, 
      user_image, job_position, role_id, 
      real_name, sex, address, 
      about_me, telephone, create_time, 
      opt_user_id, isenable)
    values (#{user_id,jdbcType=BIGINT}, #{user_account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{user_image,jdbcType=VARCHAR}, #{job_position,jdbcType=VARCHAR}, #{role_id,jdbcType=INTEGER}, 
      #{real_name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{about_me,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{opt_user_id,jdbcType=BIGINT}, #{isenable,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.hwt.domain.entity.admin.AdminUser">
    insert into admin_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        user_id,
      </if>
      <if test="user_account != null">
        user_account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="user_image != null">
        user_image,
      </if>
      <if test="job_position != null">
        job_position,
      </if>
      <if test="role_id != null">
        role_id,
      </if>
      <if test="real_name != null">
        real_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="about_me != null">
        about_me,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="opt_user_id != null">
        opt_user_id,
      </if>
      <if test="isenable != null">
        isenable,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="user_id != null">
        #{user_id,jdbcType=BIGINT},
      </if>
      <if test="user_account != null">
        #{user_account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="user_image != null">
        #{user_image,jdbcType=VARCHAR},
      </if>
      <if test="job_position != null">
        #{job_position,jdbcType=VARCHAR},
      </if>
      <if test="role_id != null">
        #{role_id,jdbcType=INTEGER},
      </if>
      <if test="real_name != null">
        #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="about_me != null">
        #{about_me,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="opt_user_id != null">
        #{opt_user_id,jdbcType=BIGINT},
      </if>
      <if test="isenable != null">
        #{isenable,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.hwt.domain.entity.admin.AdminUser">
    update admin_user
    <set>
      <if test="user_account != null">
        user_account = #{user_account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="user_image != null">
        user_image = #{user_image,jdbcType=VARCHAR},
      </if>
      <if test="job_position != null">
        job_position = #{job_position,jdbcType=VARCHAR},
      </if>
      <if test="role_id != null">
        role_id = #{role_id,jdbcType=INTEGER},
      </if>
      <if test="real_name != null">
        real_name = #{real_name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="about_me != null">
        about_me = #{about_me,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="opt_user_id != null">
        opt_user_id = #{opt_user_id,jdbcType=BIGINT},
      </if>
      <if test="isenable != null">
        isenable = #{isenable,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{user_id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hwt.domain.entity.admin.AdminUser">
    update admin_user
    set user_account = #{user_account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_image = #{user_image,jdbcType=VARCHAR},
      job_position = #{job_position,jdbcType=VARCHAR},
      role_id = #{role_id,jdbcType=INTEGER},
      real_name = #{real_name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      about_me = #{about_me,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      opt_user_id = #{opt_user_id,jdbcType=BIGINT},
      isenable = #{isenable,jdbcType=INTEGER}
    where user_id = #{user_id,jdbcType=BIGINT}
  </update>
  
  
  <!-- 根据条件获取总条数 -->
<select id="queryCountByMap" resultType="java.lang.Integer" parameterType="map">
	select count(user_id) from admin_user where 1=1 
		<if test="user_account != null and user_account !=''">
			and  `user_account` like '%${user_account}%'
		</if>
		<if test="real_name != null and real_name !=''">
			and  `real_name` like '%${real_name}%'
		</if>
		<if test="telephone != null and telephone !=''">
			and  `telephone` like '%${telephone}%'
		</if>
		<if test="sex != null and sex > 0">
			and  sex = #{sex}
		</if>
		<if test="isenable != null and isenable > 0">
			and  isenable = #{isenable}
		</if>
		
		

</select>
<!-- 根据条件获取数据 -->
<select id="queryListByMap" resultType="com.hwt.domain.entity.admin.vo.AdminUserVo" parameterType="map">
	select a.user_id, a.`user_account`, a.user_image , a.job_position, a.real_name,a.sex, a.address, a.telephone, a.isenable,b.name as roleName
		from admin_user a ,admin_role b  where 1=1 and b.id = a.role_id and b.id != 1
		<if test="user_account != null and user_account !=''">
			and  `user_account` like '%${user_account}%'
		</if>
		<if test="real_name != null and real_name !=''">
			and  `real_name` like '%${real_name}%'
		</if>
		<if test="telephone != null and telephone !=''">
			and  `telephone` like '%${telephone}%'
		</if>
		<if test="sex != null and sex > 0">
			and  sex = #{sex}
		</if>
		<if test="isenable != null and isenable > 0">
			and  isenable = #{isenable}
		</if>
		
	
		
		
		<if test="orderBy!=null and orderBy!=''">
			order by  <!-- <![CDATA[ #{orderBy} ]]> --> a.${orderBy}
		</if> 
		
		 limit #{startNum} ,#{pageSize}

</select>
</mapper>